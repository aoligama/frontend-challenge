{"version":3,"sources":["components/FormUserDetails.js","components/FormEmailInfo.js","sdk/index.ts","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","name","age","maxlength","label","primary","onClick","Component","FormEmailInfo","event","index","value","setState","back","prevStep","email","newsletter","primaryText","createUser","user","Promise","resolve","setTimeout","token","Confirm","details","then","console","log","reason","List","secondaryText","styles","button","margin","Success","UserForm","state","step","input","target","innerText","toLowerCase","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.01867e13.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class FormUserDetails extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n        const { values, handleChange } = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"frontend-challenge\" />\r\n                    <TextField \r\n                        hintText = \"Enter Your Name\"\r\n                        floatingLabelText = \"Name\"\r\n                        onChange = { handleChange('name') }\r\n                        defaultValue = { values.name }\r\n                    />\r\n                    <br />\r\n                    <TextField \r\n                        hintText = \"Enter Your Age\"\r\n                        floatingLabelText = \"Age\"\r\n                        onChange = { handleChange('age') }\r\n                        defaultValue = { values.age }\r\n                        maxlength = \"2\"\r\n                    />\r\n                    <br />\r\n                    <RaisedButton \r\n                        label = \"Continue\"\r\n                        primary = {true}\r\n                        onClick = {this.continue}\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n           \r\n        )   \r\n    }\r\n}\r\n\r\n\r\nexport default FormUserDetails;","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\n\r\nexport class FormEmailInfo extends Component {\r\n\r\n    handleChange = (event, index, value) => this.setState({ value });\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { values, handleChange } = this.props;        \r\n        \r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"frontend-challenge\" />\r\n                    <TextField \r\n                        hintText = \"Enter Your Email\"\r\n                        floatingLabelText = \"Email\"\r\n                        onChange = { handleChange('email') }\r\n                        defaultValue = { values.email }\r\n                    />\r\n                    <br />\r\n                    <SelectField\r\n                        floatingLabelText=\"Newsletter\"\r\n                        value={values.newsletter}\r\n                        onChange = {handleChange('newsletter')}\r\n                        \r\n                    >\r\n                    <MenuItem value={'daily'} primaryText=\"Daily\" />\r\n                    <MenuItem value={'weekly'} primaryText=\"Weekly\" />\r\n                    <MenuItem value={'monthly'} primaryText=\"Monthly\" />\r\n                    </SelectField>\r\n                    <br />\r\n                    <RaisedButton \r\n                        label = \"Continue\"\r\n                        primary = { true }\r\n                        onClick = { this.continue }\r\n                    /> &nbsp;\r\n                    <RaisedButton \r\n                        label = \"Back\"\r\n                        primary = { false }\r\n                        onClick = { this.back }\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n           \r\n        )   \r\n    }\r\n}\r\n\r\nexport default FormEmailInfo;","\ninterface User {\n  name: string\n  age: number\n  email: string\n  newsletter: 'daily' | 'weekly' | 'monthly'\n}\n\ninterface TokenResponse {\n  user: User\n  token: string\n}\n\nexport const createUser = (user: User): Promise<TokenResponse> =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ user, token: 'test.token' })\n    }, 1000)\n  })","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport { List, ListItem } from 'material-ui/List';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport { createUser } from '../sdk/index.ts';\r\n\r\nexport class Confirm extends Component {\r\n\r\n    continue = e => {\r\n        const details = this.props.values;\r\n\r\n        createUser(details)\r\n        .then(function(value) {\r\n            console.log(value);\r\n            e.preventDefault();\r\n        }, function(reason) {\r\n            console.log(reason); \r\n        });\r\n    \r\n        this.props.nextStep();\r\n        \r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const { values: { name, age, email, newsletter } } = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Confirm User Data\" />\r\n                    <List>\r\n                        <ListItem \r\n                            primaryText = \"Name\"\r\n                            secondaryText = { name }\r\n                        />\r\n                        <ListItem \r\n                            primaryText = \"Age\"\r\n                            secondaryText = { age }\r\n                        />\r\n                        <ListItem \r\n                            primaryText = \"Email\"\r\n                            secondaryText = { email }\r\n                        />\r\n                        <ListItem \r\n                            primaryText = \"Newsletter\"\r\n                            secondaryText = { newsletter }\r\n                        />\r\n                    </List>\r\n                    \r\n                    <br />\r\n                    <RaisedButton \r\n                        label = \"Confirm & Continue\"\r\n                        primary = { true }\r\n                        styles = { styles.button }\r\n                        onClick = { this.continue }\r\n                    /> \r\n                    &nbsp;\r\n                    <RaisedButton \r\n                        label = \"Back\"\r\n                        primary = { false }\r\n                        styles = { styles.button }\r\n                        onClick = { this.back }\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n           \r\n        )   \r\n    }\r\n}\r\n\r\nconst styles ={\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default Confirm;","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\n\r\nexport class Success extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Success\" />\r\n                    <h1> Thank you for your submission </h1>\r\n                    \r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default Success;","import React, { Component } from 'react';\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormEmailInfo from './FormEmailInfo';\r\nimport Confirm from './Confirm';\r\nimport Success from './Success';\r\n\r\nexport class UserForm extends Component {\r\n\r\n    state = {\r\n        step: 1,\r\n        name: '',\r\n        age: '',\r\n        email: '',\r\n        newsletter: 'daily',\r\n    }\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        \r\n        if( input === 'newsletter' ){\r\n            this.setState({[input]: e.target.innerText.toLowerCase()});\r\n        } else{\r\n            this.setState({[input]: e.target.value});\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        const { name, age, email, newsletter } = this.state;\r\n        const values = { name, age, email, newsletter };\r\n\r\n        switch (step) {\r\n            case 1:\r\n                return (\r\n                    <FormUserDetails \r\n                        nextStep = { this.nextStep }\r\n                        handleChange = { this.handleChange }\r\n                        values = { values }\r\n                    />\r\n                )\r\n            case 2:\r\n                return (\r\n                    <FormEmailInfo \r\n                        nextStep = { this.nextStep }\r\n                        prevStep = { this.prevStep }\r\n                        handleChange = { this.handleChange }\r\n                        values = { values }\r\n                    />\r\n                )\r\n            case 3:\r\n                return (\r\n                    <Confirm\r\n                        nextStep = { this.nextStep }\r\n                        prevStep = { this.prevStep }\r\n                        values = { values }\r\n                    />\r\n                )\r\n            case 4:\r\n                return <Success />\r\n                \r\n            default:\r\n                return (\r\n                    <FormUserDetails \r\n                        nextStep = { this.nextStep }\r\n                        handleChange = { this.handleChange }\r\n                        values = { values }\r\n                    />\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserForm;","import React from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}